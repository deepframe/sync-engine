Title: Sending

Nylas provides a single API for sending mail:

```
:::xml
POST https://api.nylas.com/n/<namespace_id>/send
```

You can use this API in two ways:

#Sending an Existing Draft

Perform a POST request with the POST body below to send an existing draft. If the message is sent successfully, the thread receives the `sent` tag. Sent drafts no longer appear in the user's drafts list.

```
:::json
{
    "draft_id": "9nhhb7w3tinsn4zkg9vjr3cxz",
    "version": "evrm018jqzwbgmzg0qp61oqrr"
}
```

#Sending a New Message

You can send messages without saving them as drafts beforehand. Instead of providing a draft ID, simply provide the JSON of the message object you want to send.

If the message is in reply to an existing message, provide the `reply_to_message_id` key with the ID of the message you are replying to.  Note that you must still explicitly specify the new message's recipients in the `to`, `cc` and `bcc` fields of the post body; this is to prevent any ambiguity about whom the message will be sent to.

```
:::json
{
    "reply_to_message_id": "84umizq7c4jtrew491brpa6iu",
    "body" : "Sounds great! See you then.",

    "to": [
        {
            "name": "Bill",
            "email": "wbrogers@mit.edu"
        }
    ]
}
```

#Handling Errors
In rare cases, message delivery can fail if the user's email gateway rejects the message. This could happen for a number of reasons, including illegal attachment data, bad credentials, or rate limiting. If your message is sent successsfully, the server will respond with an HTTP response code of 200 OK. If your message couldn't be sent, the server will respond with an appropriate error code.

Code | Description
-- | --
200 | OK - Your message was sent.
400 | Bad Request - Your request was malformed, or contained an invalid parameter.
402 | Message Rejected - The mail provider rejected your message because of its content or recipients.
403 | Unauthorized - The server was unable to authenticate with the user's mail provider. Re-authenticate the user and try again.
429 | Quota Exceeded - The user has exceeded their mail provider's sending quota.
503 | Service Unavailable - There was an error connecting to the user's mail provider. Wait and try again.

In addition, the response body contains a JSON object with information about the specific error, including the following attributes:

* `message` A brief human-readable description of the error.
* `server_error` The original error returned by the user's mail server.

**Sample Response:**

```
:::json
{
    "message": "Message too large",
    "server_error": "552 : 5.3.4 Message size exceeds fixed maximum message size",
    "type": "api_error"
}
```
