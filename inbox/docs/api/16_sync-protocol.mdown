Title: Delta Sync

As Inbox syncs your users' mailboxes, it builds a transaction log that records
every change. Your application can use these changes, exposed through the Delta
Sync API, to build email applications that process new data quickly without
fetching an index of the user's mailbox or performing a large number of API calls.

To use the Delta Sync API, your application needs to maintain a sync `cursor`,
a record of the last change you successfully processed. Each time you perform a
sync, you process the delta updates provided by the API and update your stored `cursor`.


# Obtaining a Delta Sync Cursor

The first time you sync using the Delta Sync API, you need to obtain a cursor. The
`generate_cursor` API allows you to exchange a unix timestamp for a cursor so you can
begin a sync at an arbitrary point in the user's mailbox history. Alternatively,
if you want to start consuming the user's entire mailbox history you can set
your cursor to `0`.

Once you have a cursor, you should store it and update it as you make sync requests.

```
:::xml
POST https://api.inboxapp.com/n/<namespace_id>/delta/generate_cursor
```

```
:::json
{
    "start": "1401132646"
}
```

**Sample response:**

```
:::json
{
   "cursor": "aqb0llc2ioo0bclh7uxkim9z6"
}
```

# Requesting a Delta

Each time your application syncs with Inbox, you provide the cursor indicating
your position in the user's mailbox history. The API request below returns a
set of JSON objects representing individual changes to the user's mailbox: tag
changes, new messages, etc.

```
:::xml
GET https://api.inboxapp.com/n/<namespace_id>/delta?cursor=<cursor>
```

**Sample response:**

```
:::json
{
    "cursor_start": "aqb0llc2ioo0bclh7uxkim9z6",
    "cursor_end": "5u9kwbgyq8wgq0iqdakqt7kjl",
    "deltas": [
        {
            "object_id": "aqb0llc2ioo0bclh7uxkim9z6",
            "event": "modify",
            "type": "thread",
            "attributes": {
                "tags": [
                    "inbox"
                ]
            }
        },
        {
            "id": "2fhs446h1uiomjg2sa7r5n1w6",
            "event": "create",
            "type": "thread",
            "attributes": {
                "id": "2fhs446h1uiomjg2sa7r5n1w6",
                "last_message_timestamp": 1401132649,
                "messages": [
                    "ebszclpialarlf32m1hxdcckk",
                    "duknijxbjxtonwi59p7wd17ew",
                    "e89w5zrh5o7oklc8cp9vjup69"
                ],
                "namespace": "ebaa9877yhmaeamqodbmq7rqa",
                "object": "thread",
                "participants": [
                    {
                        "email": "zulip@zulip.com",
                        "name": "Michael Grinich"
                    },
                    {
                        "email": "ben@inboxapp.com",
                        "name": ""
                    }
                ],
                "subject": "Missed Zulip from Michael Grinich",
                "first_message_timestamp": 1401132649
            }
        },
        {
            "event": "delete",
            "id": "2312313",
            "type": "5oly0nmkfbgnjhw00xa4i0k5l"
        }
    ]
}
```

After you've processed the deltas, your application should update it's stored
`cursor` to the value of `cursor_end` in the response. Inbox may only return the
first batch of changes, so it's important to make this API call repeatedly until
you receive the same `cursor_end` that you sent (`cursor_start`). This indicates
that you have consumed the entire transaction log of the user's mailbox and your
application is up-to-date.

