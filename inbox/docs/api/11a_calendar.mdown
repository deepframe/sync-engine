Title: Calendars

Nylas supports calendars and events with a variety of functionality. Each namespace has one or more calendars, and each calendar has a collection of individual events. Each event has a title and description as well as a list of participants.

The calendars endpoint is used to manage calendars which hold events. Calendars are quite simple, having only a name and description. **Note**: The `read_only` flag on a calendar indicates whether or not you can modify its properties or make changes to its events. Event changes are currently automatically synced back for Gmail and Exchange accounts.

# Retrieving a list of calendars


```
:::xml
GET https://api.nylas.com/n/<namespace_id>/calendars
```

**Response:**

```
:::json

[
    {
        "description": null,
        "id": "8n9cfm9ad2f7tul91czc5sh3p",
        "name": "default",
        "namespace_id": "14e5bn96uizyuhidhcw5rfrb0",
        "object": "calendar",
        "read_only": false
    },
    {
        "description": "google default calendar",
        "id": "ci0k1wfyv533ccgox4t7uri4h",
        "name": "example@gmail.com",
        "namespace_id": "14e5bn96uizyuhidhcw5rfrb0",
        "object": "calendar",
        "read_only": true
    }
]
```

From this response we can see that there are two available calendars. The first calendar is the user's default calendar. When events are created, if a specific calendar is not provided, they will be added to this calendar. Additionally, there is a calendar being synced from a provider. In this situation we can see that the provider-backed calendar is marked as *read_only* and therefore events cannot be added to it through the Nylas API.

**Options:**

* **`limit`** (Integer) Maximum number of results to return. Defaults to 100. If `limit` is set too high, a request may fail with HTTP status code 400 to prevent excessively large response bodies.
* **`offset`** (Integer) Zero-based offset to be used with `limit` for pagination of results.

Like other endpoints, the metadata can be retrieved for a specific calendar by specifing its `id` as in the following:

```
:::xml
GET https://api.nylas.com/n/<namespace_id>/calendars/<calendar_id>
```
