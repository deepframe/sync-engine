#!/usr/bin/env python
from setproctitle import setproctitle; setproctitle('inbox')

import sys
import os
import platform
import multiprocessing

import click

# Check that the inbox package is installed. It seems Vagrant may sometimes
# fail to provision the box appropriately; this check is a reasonable
# approximation of "Did the setup script run?"
try:
    from inbox.config import config
except ImportError:
    sys.exit("Could not find Inbox installation. "
             "Maybe the Vagrant box provisioning didn't succeed?\n"
             "Try running sudo ./setup.sh")

from inbox.util.startup import preflight
from inbox.log import get_logger, configure_logging


@click.command()
@click.option('--prod/--no-prod', default=False,
              help='Disables the autoreloader and potentially other '
                   'non-production features.')
@click.option('-c', '--config', default=None,
              help='Path to JSON configuration file.')
@click.option('--processes', default=multiprocessing.cpu_count(),
              help='Number of mailsync processes to spawn.')
def main(prod, config, processes):
    """ Launch the Inbox sync service. """
    configure_logging(prod)

    if config is not None:
        from inbox.util.startup import load_overrides
        config_path = os.path.abspath(config)
        load_overrides(config_path)

    preflight()

    log = get_logger()
    log.info('start',
             components=['mail sync', 'webhooks', 'contact sync'],
             host=platform.node(), processes=processes,
             recursion_limit=sys.getrecursionlimit())

    start(processes)


def run_webhooks():
    from inbox.util.concurrency import make_zerorpc
    from inbox.transactions.webhook import WebhookService
    setproctitle('inbox-webhooks')
    webhook_srv_loc = config.get('WEBHOOK_SERVER_LOC', None)

    service = make_zerorpc(WebhookService, webhook_srv_loc)
    service.join()


def start(processes):
    print >>sys.stderr, """
    \033[94m     Welcome to... \033[0m\033[1;95m
      _____       _
     |_   _|     | |
       | |  _ __ | |__   _____  __
       | | | '_ \| '_ \ / _ \ \/ /
      _| |_| | | | |_) | (_) >  <
     |_____|_| |_|_.__/ \___/_/\_\\  \033[0m

     Use CTRL-C to stop.
     """
    # top-level import makes child process DB calls sad :(
    from gevent import monkey; monkey.patch_all()
    import gipc

    # run SyncService in individual processes for multicore support
    from inbox.mailsync.service import SyncService
    processes = [SyncService(i, processes) for i in xrange(processes)]
    for process in processes:
        process.start()
    # also run webhooks in its own process
    processes.append(gipc.start_process(target=run_webhooks))

    # hang out forever and run some services
    for p in processes:
        p.join()

if __name__ == '__main__':
    main()
