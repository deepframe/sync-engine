#!/usr/bin/env python
from gevent import monkey; monkey.patch_all()

import sys
import os
import argparse
import platform

# Check that the inbox package is installed. It seems Vagrant may sometimes
# fail to provision the box appropriately; this check is a reasonable
# approximation of "Did the setup script run?"
try:
    from inbox.config import config
except ImportError:
    sys.exit("Could not find Inbox installation. "
             "Maybe the Vagrant box provisioning didn't succeed?\n"
             "Try running sudo ./setup.sh")


from inbox.util.startup import preflight

from gevent import joinall
from setproctitle import setproctitle; setproctitle('inbox')

from inbox.log import get_logger, configure_logging
log = get_logger()

parser = argparse.ArgumentParser(description='Inbox sync service')

parser.add_argument('--prod', action='store_true', default=False,
                    help='Disables the autoreloader and potentially other'
                    ' non-production features.')
parser.add_argument('-c', '--config', dest='config', default=None,
                    help='Path to JSON configuration file.')
args = parser.parse_args()

configure_logging(args.prod)

if args.config:
    from inbox.util.startup import load_overrides
    config_path = os.path.abspath(args.config)
    # TODO expand to full path
    load_overrides(config_path)

preflight()


def start():
    from inbox.models.backends import module_registry

    threads = []

    from inbox.util.concurrency import make_zerorpc

    # Start ZeroRPC mail sync server service
    from inbox.mailsync.service import SyncService
    sync_srv_loc = config.get('CRISPIN_SERVER_LOC', None)
    threads.append(make_zerorpc(SyncService, sync_srv_loc))

    # start webhook service
    from inbox.transactions.webhook import WebhookService
    webhook_srv_loc = config.get('WEBHOOK_SERVER_LOC', None)
    threads.append(make_zerorpc(WebhookService, webhook_srv_loc))

    print >>sys.stderr, """
    \033[94m     Welcome to... \033[0m\033[1;95m
      _____       _
     |_   _|     | |
       | |  _ __ | |__   _____  __
       | | | '_ \| '_ \ / _ \ \/ /
      _| |_| | | | |_) | (_) >  <
     |_____|_| |_|_.__/ \___/_/\_\\  \033[0m

     Use CTRL-C to stop.
     """

    log.info('start',
             components=['mail sync', 'webhooks', 'contact sync'],
             host=platform.node(),
             recursion_limit=sys.getrecursionlimit(),
             supported_providers=module_registry.keys())

    # hang out forever and run some services
    joinall(threads)

if not args.prod:
    from werkzeug.serving import run_with_reloader
    run_with_reloader(start)
else:
    start()
