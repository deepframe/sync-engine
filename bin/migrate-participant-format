#!/usr/bin/env python
# migrate the participants storage format from a hash table to a list.

from inbox.models.session import session_scope
from inbox.sqlalchemy_ext.util import JSON, BigJSON, safer_yield_per, MutableList
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.sql import text
from sqlalchemy import Column
from inbox.ignition import main_engine

import sqlalchemy as sa
import json
import time
import datetime
import sys


def main(cutoff_time):
    engine = main_engine(pool_size=1, max_overflow=0)
    Base = declarative_base()
    Base.metadata.reflect(engine)

    class Event(Base):
        __table__ = Base.metadata.tables['event']

    with session_scope() as db_session:
        events = db_session.query(Event).filter(Event.updated_at <= cutoff_time)
        for event in safer_yield_per(events, Event.id, 1, 100):
            l = []
            participants_hash = json.loads(event.participants_by_email)
            for participant in participants_hash:
                dct = participants_hash[participant]

                # Also rename 'email_address' to 'email'
                if 'email_address' in dct:
                    dct['email'] = 'email_address'
                    del dct['email_address']

                l.append(dct)
            event.participants = json.dumps(l)
            db_session.flush()


if __name__ == '__main__':
    if len(sys.argv) != 2:
        print 'usage: migrate-participant-format "2010-07-03 15:23"'
        sys.exit(-1)

    t = time.strptime(sys.argv[1], "%Y-%m-%d %H:%M")
    cutoff_time = datetime.datetime(*t[:6])
    main(cutoff_time)
