#!/usr/bin/env python

import click
from sqlalchemy import func

from inbox.models.session import session_scope
from inbox.models import Message, Thread, Namespace
from inbox.search.adaptor import NamespaceSearchEngine


@click.command()
@click.option('--account-id', default=None)
def main(account_id):
    account_search_status = []

    with session_scope() as db_session:
        query = db_session.query(Namespace)
        if account_id:
            query = query.filter(Namespace.account_id == account_id)

        for namespace in query.all():
            ns = NamespaceSearchEngine(namespace.public_id)

            total_threads = db_session.query(func.count(Thread.id)).filter(
                Thread.namespace_id == namespace.id).scalar()
            total_messages = db_session.query(func.count(Message.id)).filter(
                Message.namespace_id == namespace.id).scalar()
            indexed_threads = ns.threads.count()
            indexed_messages = ns.messages.count()


            account_search_status.append([
                    str(namespace.account_id),
                    str(namespace.public_id),
                    "%s / %s" % (indexed_messages, total_messages),
                    "%.2f%% Messages" % (_safe_percent(indexed_messages,
                                                        total_messages)),
                    "%s / %s" % (indexed_threads, total_threads),
                    "%.2f%% Threads" % (_safe_percent(indexed_threads,
                                                      total_threads))
                    ])

    for status in account_search_status:
        print "\t".join(status)

def _safe_percent(num,den):
    if den == 0:
        return 0
    return float(num)/den*100

if __name__ == "__main__":
    main()
