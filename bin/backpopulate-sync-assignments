#!/usr/bin/env python
"""
One-time migration from database-mediated to Redis-mediated sync scheduling.
"""
from inbox.models.session import session_scope_by_shard_id
from inbox.models import Account
from inbox.config import config
from inbox.scheduling.queue import QueueClient
from nylas.logging import get_logger, configure_logging
configure_logging()
log = get_logger()


def main():
    for database_host in config['DATABASE_HOSTS']:
        zone = database_host.get('ZONE')
        qc = QueueClient(zone)
        for shard in database_host['SHARDS']:
            if shard.get('DISABLED'):
                continue
            with session_scope_by_shard_id(shard['ID']) as db_session:
                assignments = db_session.query(Account.id, Account.sync_host).\
                    filter(Account.sync_should_run,
                           Account.sync_host.isnot(None)).all()
                for id_, host in assignments:
                    qc.redis.hset(qc._hash, id_, host)
                    log.info('Transferred sync assignment',
                             account_id=id_, host=host)


if __name__ == '__main__':
    main()
