#!/usr/bin/env python
import click
import requests

from boto import ec2

from inbox.scheduling.queue import QueueClient

HTTP_FRONTEND_PORT_BASE = 16384


def get_zone_for_instance(hostname):
    conn = ec2.connect_to_region('us-west-2')

    instances = []
    for r in conn.get_all_instances():
        for i in r.instances:
            instances.append(i)

    instances = [i for i in instances if i.tags.get('Name') == hostname and
                 i.tags.get('Role') == 'sync']

    if not instances:
        raise Exception("No sync host with hostname '{}'".format(hostname))

    assert len(instances) == 1

    return instances[0].placement


@click.command()
@click.option('--dry-run', is_flag=True, default=False)
@click.option('--number', type=int, help='how many accounts to unschedule')
@click.argument('hostname')
def main(dry_run, number, hostname):
    """
    Unschedule all accounts assigned to a given sync host.
    Intended primarily for use when decomissioning sync instances or for
    manually unloading an overloaded sync instance.

    """
    zone = get_zone_for_instance(hostname)
    qc = QueueClient(zone)
    # hosts in redis are of the format hostname:<cpu_id>
    to_unschedule = [(account_id, host) for account_id, host in
                     qc.assigned().items() if host.startswith(hostname)]

    if number:
        to_unschedule = to_unschedule[:number]

    if to_unschedule:
        if dry_run:
            for account_id, host in to_unschedule:
                print "Would unassign", account_id
        else:
            for account_id, host in to_unschedule:
                hostname, cpu_id = host.split(':')
                host_ip = hostname.replace('sync-', '').replace('-', '.')
                port = HTTP_FRONTEND_PORT_BASE + int(cpu_id)
                unassign_url = ':'.join([host_ip, str(port)]) + '/unassign'

                resp = requests.post(
                    unassign_url,
                    data={'account_id': account_id})
                if resp.code != 200:
                    print "Unassigned", account_id
                else:
                    print "Couldn't unassign {}. Received HTTP code {} "\
                          "from process.".format(account_id, resp.code)
    else:
        print "No syncs to unschedule for", hostname

if __name__ == '__main__':
    main()
