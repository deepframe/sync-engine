#!/usr/bin/env python
"""
Run the syncback service separately. You should run this if you run the
API under something like gunicorn. (For convenience, the bin/inbox-api script
also starts up the syncback service.)

"""
import os
from setproctitle import setproctitle
setproctitle('inbox_syncback_service')

import click
from gevent import monkey
monkey.patch_all()

import gevent_openssl
gevent_openssl.monkey_patch()

from nylas.logging import configure_logging

from inbox.config import config as inbox_config
from inbox.transactions.actions import SyncbackService
from inbox.util.startup import preflight, load_overrides


@click.command()
@click.option('--prod/--no-prod', default=False,
              help='Disables the autoreloader and potentially other '
                   'non-production features.')
@click.option('-c', '--config', default=None,
              help='Path to JSON configuration file.')
def main(prod, config):
    """ Launch the actions syncback service. """
    if config is not None:
        config_path = os.path.abspath(config)
        load_overrides(config_path)
    configure_logging(log_level=inbox_config.get('LOGLEVEL'))
    os.environ["SENTRY_DSN"] = inbox_config.get("SENTRY_DSN", "")
    if prod:
        start()
    else:
        preflight()
        from werkzeug.serving import run_with_reloader
        run_with_reloader(start)


def start():
    # Start the syncback service, and just hang out forever
    syncback = SyncbackService()
    syncback.start()
    syncback.join()

if __name__ == '__main__':
    main()
